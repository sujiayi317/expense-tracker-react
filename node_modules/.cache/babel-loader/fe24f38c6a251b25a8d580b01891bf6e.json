{"ast":null,"code":"var _jsxFileName = \"E:\\\\DevApps\\\\ReactApps\\\\React-Expense-Tracker-MERN\\\\client\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\"; // initial state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transactions: [// { id: 1, text: 'Flower', amount: -20 },\n    // { id: 2, text: 'Salary', amount: 300 },\n    // { id: 3, text: 'Book', amount: -10 },\n    // { id: 4, text: 'Camera', amount: 150 }\n  ],\n  error: null,\n  loading: true\n}; // create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); // provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState); // actions\n  // use axios, which returns a promise\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get(\"/api/v1/transactions\");\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      // delete from the server\n      await axios.delete(`/api/v1/transactions/${id}`); // delete from the front end\n\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["E:/DevApps/ReactApps/React-Expense-Tracker-MERN/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,CACZ;AACA;AACA;AACA;AAJY,GADK;AAOnBC,EAAAA,KAAK,EAAE,IAPY;AAQnBC,EAAAA,OAAO,EAAE;AARU,CAArB,C,CAWA;;AACA,OAAO,MAAMC,aAAa,gBAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD8C,CAG9C;AACA;;AACA,iBAAeS,eAAf,GAAiC;AAC/B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,iBAAee,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAI;AACF;AACA,YAAMnB,KAAK,CAACoB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN,CAFE,CAGF;;AACAV,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAID,KARD,CAQE,OAAOH,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,WAASkB,cAAT,CAAwBC,WAAxB,EAAqC;AACnCb,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEQ;AAFF,KAAD,CAAR;AAID;;AAED,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADf;AAELC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFR;AAGLC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAHV;AAILM,MAAAA,eAJK;AAKLQ,MAAAA,iBALK;AAMLG,MAAAA;AANK,KADT;AAAA,cAUGd;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3DM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport axios from \"axios\";\r\n\r\n// initial state\r\nconst initialState = {\r\n  transactions: [\r\n    // { id: 1, text: 'Flower', amount: -20 },\r\n    // { id: 2, text: 'Salary', amount: 300 },\r\n    // { id: 3, text: 'Book', amount: -10 },\r\n    // { id: 4, text: 'Camera', amount: 150 }\r\n  ],\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\n// create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // actions\r\n  // use axios, which returns a promise\r\n  async function getTransactions() {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/transactions\");\r\n\r\n      dispatch({\r\n        type: \"GET_TRANSACTIONS\",\r\n        payload: res.data.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"TRANSACTION_ERROR\",\r\n        payload: err.response.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function deleteTransaction(id) {\r\n    try {\r\n      // delete from the server\r\n      await axios.delete(`/api/v1/transactions/${id}`);\r\n      // delete from the front end\r\n      dispatch({\r\n        type: \"DELETE_TRANSACTION\",\r\n        payload: id,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"TRANSACTION_ERROR\",\r\n        payload: err.response.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}